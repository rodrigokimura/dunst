# See dunst(5) for all configuration options

[global]
    ### Display ###
    monitor = 1
    # (values: [none/mouse/keyboard] default: none)
    follow = "none"

    ### Geometry ###
    width=500
    height=500
    origin = "top-right"
    offset = "15x40"


    ### Progress bar ###

    # Turn on the progess bar. It appears when a progress hint is passed with
    # for example dunstify -h int:value:12
    progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    progress_bar_height = 10

    # Set the frame width of the progress bar
    progress_bar_frame_width = 1

    # Set the minimum width for the progress bar
    # progress_bar_min_width = 150

    # Set the maximum width for the progress bar
    progress_bar_max_width = 500

    # Corner radius for the progress bar. 0 disables rounded corners.
    progress_bar_corner_radius = 0
    highlight = "#3CA6A6"


    indicate_hidden = true

    shrink = true

    transparency = 20

    separator_height = 2

    padding = 8
    horizontal_padding = 8
    frame_width = 2

    frame_color = "#3CA6A6"

    # (values: [auto/foreground/frame/#RRGGBB] default: auto)
    separator_color = "frame"

    sort = true

    idle_threshold = 120

    ### TEXT ###
    font = "Cascadia Code 12"
    line_height = 0
    markup = "full"
    alignment = "left"
    vertical_alignment = "center"
    show_age_threshold = 60
    word_wrap = true
    ellipsize = "middle"
    ignore_newline = false
    stack_duplicates = true
    show_indicators = true
    icon_position = "left"
    min_icon_size = 20
    max_icon_size = 20
    icon_path = "/usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/"
    sticky_history = true
    history_length = 20
    dmenu = "/usr/bin/dmenu"

    browser = "/usr/bin/google-chrome"

    always_run_script = true

    corner_radius = 0
    
    ### MOUSE ###

    mouse_left_click = "do_action, close_current"
    mouse_middle_click = "close_current"
    mouse_right_click = "close_all"

[urgency_low]
    background = "#012E40"
    foreground = "#888888"
    timeout = 20
    # Icon for notifications with low urgency, uncomment to enable
    #default_icon = /path/to/icon

[urgency_normal]
    background = "#024959"
    foreground = "#ffffff"
    timeout = 60
    # Icon for notifications with normal urgency, uncomment to enable
    #default_icon = /path/to/icon

[urgency_critical]
    background = "#900000"
    foreground = "#ffffff"
    frame_color = "#ff0000"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #default_icon = /path/to/icon

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg